using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using System.Xml.Linq;

namespace FacilityDocLaptop
{
   
    public partial class HomePage : Window
    {
        public HomePage()
        {
            InitializeComponent();
        }

       public void HideHomePage()         //Hiding HomePage 
        {
            gridHomePage.Visibility = Visibility.Collapsed;
        }

        public void ShowHomePage()       //Back to HomePage
       {
           gridHomePage.Visibility = Visibility.Visible;
       }
        private void LoadProject_btn_Click(object sender, RoutedEventArgs e)
        {
            HideHomePage();
            loadProject_grid.Visibility = Visibility.Visible;
        }

        private void NewProject_btn_Click(object sender, RoutedEventArgs e)
        {
            newProject_grid.Visibility = Visibility.Visible;
            
            XElement xelement = XElement.Load("../../Assets/ProjectXML.xml");
            IEnumerable<XElement> name = xelement.Elements();
            var DATA = from query in xelement.Descendants("project").Elements("name")
                       select new
                       {
                           name = query.Value,
                       };
            foreach(var names in DATA)
            {
                AllProject_ListBox.Items.Add(names.name);
            }
        }

         private void LastProject_btn_Click(object sender, RoutedEventArgs e)
        {
            HideHomePage();
            lastProject_grid.Visibility = Visibility.Visible;
        }

        private void ImportPhoto_btn_Click(object sender, RoutedEventArgs e)
        {
            HideHomePage();
            importPhotos_grid.Visibility = Visibility.Visible;
        }

        private void lastProject_back_Click(object sender, RoutedEventArgs e)
        {
            ShowHomePage();
            lastProject_grid.Visibility = Visibility.Collapsed;
        }

        private void newProject_back_Click(object sender, RoutedEventArgs e)
        {
            ShowHomePage();
            newProject_grid.Visibility = Visibility.Collapsed;
        }

        private void loadProject_back_Click(object sender, RoutedEventArgs e)
        {
            ShowHomePage();
           loadProject_grid.Visibility = Visibility.Collapsed;
        }

        private void importPhotos_back_Click(object sender, RoutedEventArgs e)
        {
            ShowHomePage();
            importPhotos_grid.Visibility = Visibility.Collapsed;
        }

        private void editHeirarchy_btn_Click(object sender, RoutedEventArgs e)
        {
            MessageBoxResult messageBoxResult = MessageBox.Show("Do you want to edit Hierarchy?", "Edit Confirmation", MessageBoxButton.YesNo);
        if (messageBoxResult == MessageBoxResult.Yes)
                 {
                     editHierarchyWindow ehw = new editHierarchyWindow();
                     ehw.Show();
                 }
 
        }

      
        private void Hyperlink_RequestNavigate_1(object sender, System.Windows.Navigation.RequestNavigateEventArgs e)
        {
            editPage_grid.Visibility = Visibility.Visible;
            gridHomePage.Visibility = Visibility.Collapsed;
           
        }

        private void addPictures_btn_Click(object sender, RoutedEventArgs e)
        {
            MessageBoxResult messageBoxResult = MessageBox.Show("Do you want to add photos?", "Add Confirmation", MessageBoxButton.YesNo);
            if (messageBoxResult == MessageBoxResult.Yes)
            {
                addPhotos ap = new addPhotos();
                ap.Show();
            }
        }

        private void AllProject_ListBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            ProjectName.Text = AllProject_ListBox.SelectedItem.ToString();
        }

        private void ok_btn_Click(object sender, RoutedEventArgs e)
        {
            XElement xelement = XElement.Load("../../Assets/ProjectXML.xml");
            IEnumerable<XElement> name = xelement.Elements();

            var DATA = from query in xelement.Descendants("project").Where(query => query.Element("name").Value == ProjectName.Text).Elements("description")
                       select new
                       {
                           name = query.Value,
                       };
            foreach (var names in DATA)
            {
                des_txtbox.Text = names.name.ToString();

            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            var DATA1 = from query in xelement.Descendants("project").Where(query => query.Element("name").Value == ProjectName.Text).Elements("createdtime")
                        select new
                        {
                            name = query.Value,
                        };
            foreach (var names in DATA1)
            {
                creationdate_txt.Text = names.name.ToString();

            }
            ///////////////////////////////////////////////////////////////////////////////////////////////////////
            var DATA2 = from query in xelement.Descendants("project").Where(query => query.Element("name").Value == ProjectName.Text).Elements("updatetime")
                        select new
                        {
                            name = query.Value,
                        };
            foreach (var names in DATA2)
            {
                updatedate_txt.Text = names.name.ToString();

            }

        }

        private void editRisk_btn_Click(object sender, RoutedEventArgs e)
        {
            MessageBoxResult messageBoxResult = MessageBox.Show("Do you want to edit Risks?", "Edit Confirmation", MessageBoxButton.YesNo);
            if (messageBoxResult == MessageBoxResult.Yes)
            {
                editRiskPage erp = new editRiskPage();
                erp.Show();
             
               
            }
        }

        

       
    }
}
