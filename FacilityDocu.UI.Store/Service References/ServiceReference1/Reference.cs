//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace Tablet_App.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class ProjectDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientField;
        
        private bool ClosedField;
        
        private Tablet_App.ServiceReference1.UserDTO CreatedByField;
        
        private System.DateTime CreationDateField;
        
        private string DescriptionField;
        
        private System.DateTime LastUpdatedAtField;
        
        private Tablet_App.ServiceReference1.UserDTO LastUpdatedByField;
        
        private string LocationField;
        
        private string PersonsField;
        
        private string ProjectIDField;
        
        private string ProjectNumberField;
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.RigTypeDTO> RigTypesField;
        
        private bool TemplateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Closed {
            get {
                return this.ClosedField;
            }
            set {
                if ((this.ClosedField.Equals(value) != true)) {
                    this.ClosedField = value;
                    this.RaisePropertyChanged("Closed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tablet_App.ServiceReference1.UserDTO CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedAt {
            get {
                return this.LastUpdatedAtField;
            }
            set {
                if ((this.LastUpdatedAtField.Equals(value) != true)) {
                    this.LastUpdatedAtField = value;
                    this.RaisePropertyChanged("LastUpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tablet_App.ServiceReference1.UserDTO LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Persons {
            get {
                return this.PersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonsField, value) != true)) {
                    this.PersonsField = value;
                    this.RaisePropertyChanged("Persons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectNumber {
            get {
                return this.ProjectNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNumberField, value) != true)) {
                    this.ProjectNumberField = value;
                    this.RaisePropertyChanged("ProjectNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.RigTypeDTO> RigTypes {
            get {
                return this.RigTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.RigTypesField, value) != true)) {
                    this.RigTypesField = value;
                    this.RaisePropertyChanged("RigTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((this.TemplateField.Equals(value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class UserDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string PasswordField;
        
        private string UserIDField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RigTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class RigTypeDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ModuleDTO> ModulesField;
        
        private string NameField;
        
        private string RigTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ModuleDTO> Modules {
            get {
                return this.ModulesField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulesField, value) != true)) {
                    this.ModulesField = value;
                    this.RaisePropertyChanged("Modules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RigTypeID {
            get {
                return this.RigTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RigTypeIDField, value) != true)) {
                    this.RigTypeIDField = value;
                    this.RaisePropertyChanged("RigTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class ModuleDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ModuleIDField;
        
        private string NameField;
        
        private string NumberField;
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.StepDTO> StepsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIDField, value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.StepDTO> Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((object.ReferenceEquals(this.StepsField, value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class StepDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ActionDTO> ActionsField;
        
        private string NameField;
        
        private string NumberField;
        
        private string StepIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ActionDTO> Actions {
            get {
                return this.ActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionsField, value) != true)) {
                    this.ActionsField = value;
                    this.RaisePropertyChanged("Actions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StepID {
            get {
                return this.StepIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StepIDField, value) != true)) {
                    this.StepIDField = value;
                    this.RaisePropertyChanged("StepID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class ActionDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ActionIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.AttachmentDTO> AttachmentsField;
        
        private string DescriptionField;
        
        private string DimensionsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ImageDTO> ImagesField;
        
        private string ImportantDescriptionField;
        
        private string ImportantNameField;
        
        private bool IsAnalysisField;
        
        private bool IsDescriptionwarningField;
        
        private bool IsNameWarningField;
        
        private string LiftingGearsField;
        
        private string NameField;
        
        private string NumberField;
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ResourceDTO> ResourcesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.RiskAnalysisDTO> RiskAnalysisField;
        
        private string RisksField;
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ToolDTO> ToolsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionIDField, value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.AttachmentDTO> Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimensions {
            get {
                return this.DimensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsField, value) != true)) {
                    this.DimensionsField = value;
                    this.RaisePropertyChanged("Dimensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ImageDTO> Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportantDescription {
            get {
                return this.ImportantDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportantDescriptionField, value) != true)) {
                    this.ImportantDescriptionField = value;
                    this.RaisePropertyChanged("ImportantDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportantName {
            get {
                return this.ImportantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportantNameField, value) != true)) {
                    this.ImportantNameField = value;
                    this.RaisePropertyChanged("ImportantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnalysis {
            get {
                return this.IsAnalysisField;
            }
            set {
                if ((this.IsAnalysisField.Equals(value) != true)) {
                    this.IsAnalysisField = value;
                    this.RaisePropertyChanged("IsAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDescriptionwarning {
            get {
                return this.IsDescriptionwarningField;
            }
            set {
                if ((this.IsDescriptionwarningField.Equals(value) != true)) {
                    this.IsDescriptionwarningField = value;
                    this.RaisePropertyChanged("IsDescriptionwarning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNameWarning {
            get {
                return this.IsNameWarningField;
            }
            set {
                if ((this.IsNameWarningField.Equals(value) != true)) {
                    this.IsNameWarningField = value;
                    this.RaisePropertyChanged("IsNameWarning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LiftingGears {
            get {
                return this.LiftingGearsField;
            }
            set {
                if ((object.ReferenceEquals(this.LiftingGearsField, value) != true)) {
                    this.LiftingGearsField = value;
                    this.RaisePropertyChanged("LiftingGears");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ResourceDTO> Resources {
            get {
                return this.ResourcesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourcesField, value) != true)) {
                    this.ResourcesField = value;
                    this.RaisePropertyChanged("Resources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.RiskAnalysisDTO> RiskAnalysis {
            get {
                return this.RiskAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskAnalysisField, value) != true)) {
                    this.RiskAnalysisField = value;
                    this.RaisePropertyChanged("RiskAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Risks {
            get {
                return this.RisksField;
            }
            set {
                if ((object.ReferenceEquals(this.RisksField, value) != true)) {
                    this.RisksField = value;
                    this.RaisePropertyChanged("Risks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ToolDTO> Tools {
            get {
                return this.ToolsField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolsField, value) != true)) {
                    this.ToolsField = value;
                    this.RaisePropertyChanged("Tools");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class AttachmentDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AttachmentIDField;
        
        private byte[] FileByteStreamField;
        
        private string NameField;
        
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentID {
            get {
                return this.AttachmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentIDField, value) != true)) {
                    this.AttachmentIDField = value;
                    this.RaisePropertyChanged("AttachmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileByteStream {
            get {
                return this.FileByteStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.FileByteStreamField, value) != true)) {
                    this.FileByteStreamField = value;
                    this.RaisePropertyChanged("FileByteStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class ImageDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.CommentDTO> CommentsField;
        
        private System.DateTime CreationDateField;
        
        private string DescriptionField;
        
        private byte[] FileByteStreamField;
        
        private string ImageIDField;
        
        private string NumberField;
        
        private string PathField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> TagsField;
        
        private bool UsedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.CommentDTO> Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileByteStream {
            get {
                return this.FileByteStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.FileByteStreamField, value) != true)) {
                    this.FileByteStreamField = value;
                    this.RaisePropertyChanged("FileByteStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageID {
            get {
                return this.ImageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageIDField, value) != true)) {
                    this.ImageIDField = value;
                    this.RaisePropertyChanged("ImageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Used {
            get {
                return this.UsedField;
            }
            set {
                if ((this.UsedField.Equals(value) != true)) {
                    this.UsedField = value;
                    this.RaisePropertyChanged("Used");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class ResourceDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string ResourceCountField;
        
        private string ResourceIDField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceCount {
            get {
                return this.ResourceCountField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceCountField, value) != true)) {
                    this.ResourceCountField = value;
                    this.RaisePropertyChanged("ResourceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RiskAnalysisDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class RiskAnalysisDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ActivityField;
        
        private double BField;
        
        private double B_Field;
        
        private string ControlsField;
        
        private string DangerField;
        
        private double EField;
        
        private double E_Field;
        
        private double KField;
        
        private double K_Field;
        
        private double RiskField;
        
        private string RiskAnalysisIDField;
        
        private double Risk_Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityField, value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double B {
            get {
                return this.BField;
            }
            set {
                if ((this.BField.Equals(value) != true)) {
                    this.BField = value;
                    this.RaisePropertyChanged("B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double B_ {
            get {
                return this.B_Field;
            }
            set {
                if ((this.B_Field.Equals(value) != true)) {
                    this.B_Field = value;
                    this.RaisePropertyChanged("B_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Controls {
            get {
                return this.ControlsField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlsField, value) != true)) {
                    this.ControlsField = value;
                    this.RaisePropertyChanged("Controls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Danger {
            get {
                return this.DangerField;
            }
            set {
                if ((object.ReferenceEquals(this.DangerField, value) != true)) {
                    this.DangerField = value;
                    this.RaisePropertyChanged("Danger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double E {
            get {
                return this.EField;
            }
            set {
                if ((this.EField.Equals(value) != true)) {
                    this.EField = value;
                    this.RaisePropertyChanged("E");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double E_ {
            get {
                return this.E_Field;
            }
            set {
                if ((this.E_Field.Equals(value) != true)) {
                    this.E_Field = value;
                    this.RaisePropertyChanged("E_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double K {
            get {
                return this.KField;
            }
            set {
                if ((this.KField.Equals(value) != true)) {
                    this.KField = value;
                    this.RaisePropertyChanged("K");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double K_ {
            get {
                return this.K_Field;
            }
            set {
                if ((this.K_Field.Equals(value) != true)) {
                    this.K_Field = value;
                    this.RaisePropertyChanged("K_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Risk {
            get {
                return this.RiskField;
            }
            set {
                if ((this.RiskField.Equals(value) != true)) {
                    this.RiskField = value;
                    this.RaisePropertyChanged("Risk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskAnalysisID {
            get {
                return this.RiskAnalysisIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskAnalysisIDField, value) != true)) {
                    this.RiskAnalysisIDField = value;
                    this.RaisePropertyChanged("RiskAnalysisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Risk_ {
            get {
                return this.Risk_Field;
            }
            set {
                if ((this.Risk_Field.Equals(value) != true)) {
                    this.Risk_Field = value;
                    this.RaisePropertyChanged("Risk_");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToolDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class ToolDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string ToolIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolID {
            get {
                return this.ToolIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolIDField, value) != true)) {
                    this.ToolIDField = value;
                    this.RaisePropertyChanged("ToolID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentDTO", Namespace="http://schemas.datacontract.org/2004/07/FacilityDocu.DTO")]
    public partial class CommentDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentIDField;
        
        private System.DateTime CommentedAtField;
        
        private string TextField;
        
        private string UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentID {
            get {
                return this.CommentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentIDField, value) != true)) {
                    this.CommentIDField = value;
                    this.RaisePropertyChanged("CommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CommentedAt {
            get {
                return this.CommentedAtField;
            }
            set {
                if ((this.CommentedAtField.Equals(value) != true)) {
                    this.CommentedAtField = value;
                    this.RaisePropertyChanged("CommentedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IFacilityDocuService")]
    public interface IFacilityDocuService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityDocuService/Login", ReplyAction="http://tempuri.org/IFacilityDocuService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityDocuService/IsSync", ReplyAction="http://tempuri.org/IFacilityDocuService/IsSyncResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> IsSyncAsync(System.Collections.Generic.Dictionary<int, System.DateTime> inputProjects, bool fromTablet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityDocuService/GetProjectDetails", ReplyAction="http://tempuri.org/IFacilityDocuService/GetProjectDetailsResponse")]
        System.Threading.Tasks.Task<Tablet_App.ServiceReference1.ProjectDTO> GetProjectDetailsAsync(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityDocuService/UpdateProject", ReplyAction="http://tempuri.org/IFacilityDocuService/UpdateProjectResponse")]
        System.Threading.Tasks.Task<Tablet_App.ServiceReference1.ProjectDTO> UpdateProjectAsync(Tablet_App.ServiceReference1.ProjectDTO projectDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityDocuService/UpdateActionImages", ReplyAction="http://tempuri.org/IFacilityDocuService/UpdateActionImagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> UpdateActionImagesAsync(Tablet_App.ServiceReference1.ActionDTO action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityDocuService/UpdateActionAttachments", ReplyAction="http://tempuri.org/IFacilityDocuService/UpdateActionAttachmentsResponse")]
        System.Threading.Tasks.Task UpdateActionAttachmentsAsync(Tablet_App.ServiceReference1.ActionDTO action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityDocuService/GetTools", ReplyAction="http://tempuri.org/IFacilityDocuService/GetToolsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ToolDTO>> GetToolsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityDocuService/CreateTemplate", ReplyAction="http://tempuri.org/IFacilityDocuService/CreateTemplateResponse")]
        System.Threading.Tasks.Task CreateTemplateAsync(Tablet_App.ServiceReference1.ProjectDTO projectDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFacilityDocuServiceChannel : Tablet_App.ServiceReference1.IFacilityDocuService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FacilityDocuServiceClient : System.ServiceModel.ClientBase<Tablet_App.ServiceReference1.IFacilityDocuService>, Tablet_App.ServiceReference1.IFacilityDocuService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public FacilityDocuServiceClient() : 
                base(FacilityDocuServiceClient.GetDefaultBinding(), FacilityDocuServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IFacilityDocuService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FacilityDocuServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(FacilityDocuServiceClient.GetBindingForEndpoint(endpointConfiguration), FacilityDocuServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FacilityDocuServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(FacilityDocuServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FacilityDocuServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(FacilityDocuServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FacilityDocuServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> IsSyncAsync(System.Collections.Generic.Dictionary<int, System.DateTime> inputProjects, bool fromTablet) {
            return base.Channel.IsSyncAsync(inputProjects, fromTablet);
        }
        
        public System.Threading.Tasks.Task<Tablet_App.ServiceReference1.ProjectDTO> GetProjectDetailsAsync(int projectID) {
            return base.Channel.GetProjectDetailsAsync(projectID);
        }
        
        public System.Threading.Tasks.Task<Tablet_App.ServiceReference1.ProjectDTO> UpdateProjectAsync(Tablet_App.ServiceReference1.ProjectDTO projectDTO) {
            return base.Channel.UpdateProjectAsync(projectDTO);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> UpdateActionImagesAsync(Tablet_App.ServiceReference1.ActionDTO action) {
            return base.Channel.UpdateActionImagesAsync(action);
        }
        
        public System.Threading.Tasks.Task UpdateActionAttachmentsAsync(Tablet_App.ServiceReference1.ActionDTO action) {
            return base.Channel.UpdateActionAttachmentsAsync(action);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Tablet_App.ServiceReference1.ToolDTO>> GetToolsAsync() {
            return base.Channel.GetToolsAsync();
        }
        
        public System.Threading.Tasks.Task CreateTemplateAsync(Tablet_App.ServiceReference1.ProjectDTO projectDTO) {
            return base.Channel.CreateTemplateAsync(projectDTO);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IFacilityDocuService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IFacilityDocuService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:51256/FacilityDocuService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return FacilityDocuServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IFacilityDocuService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return FacilityDocuServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IFacilityDocuService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IFacilityDocuService,
        }
    }
}
